import{r as m,s as v,x as u}from"./ycaG4YXp.min.js";import{e as b}from"./0XPwTFcg.min.js";import{n as w}from"./IYoTYjYE.min.js";import{t as p}from"./ianzD0dL.min.js";import{e as h}from"./p9kcPq91.min.js";import{i as y}from"./IFunn9hk.min.js";import{o as d}from"./5Ss99t85.min.js";import"./_OAi-NRQ.min.js";import"./RpI-OtYr.min.js";import"./rwBjrn-0.min.js";import"./bAPu5B1A.min.js";import"./lHimDk5Y.min.js";const _=".container{width:100vw;height:100dvh;position:fixed;top:0;left:0;z-index:999}.container__overlay{position:absolute;width:100vw;height:100dvh;top:0;left:0;background-color:#202124}.container__close{margin-top:2px;--hsw-icon-color: #000}.container__close,.container__overlay{transition:opacity .3s ease-in-out;pointer-events:none;opacity:0}.container__close\\:visible,.container__overlay\\:visible{opacity:1;pointer-events:all}.drawer{--hsw-button-color: #5f6368;display:flex;flex-direction:column;background-color:#fff;position:relative;inset:0;z-index:50;height:100dvh;transition:transform .3s cubic-bezier(.4,0,.2,1),box-shadow .3s cubic-bezier(.4,0,.2,1);width:calc(100% - 48px);max-width:454px;border-right:1px solid #dadce0}.drawer\\:closed{pointer-events:none;transform:translate(-100%)}.drawer\\:open{box-shadow:0 3px 1px -2px #0003,0 2px 2px #00000024,0 1px 5px #0000001f}.drawer__header{padding:2px 5px 4px 24px;display:flex;justify-content:space-between;align-items:center;border-bottom:1px solid #dadce0;height:54px}.drawer__body{flex-grow:1;padding:28px 0;overflow-y:scroll}.drawer__body::-webkit-scrollbar{display:none}.drawer__body ::slotted(a){color:#5f6368;display:block;padding:10px 24px;text-decoration:none}";var f=Object.defineProperty,x=Object.getOwnPropertyDescriptor,i=(t,r,n,s)=>{for(var o=s>1?void 0:s?x(r,n):r,l=t.length-1,a;l>=0;l--)(a=t[l])&&(o=(s?a(r,n,o):a(o))||o);return s&&o&&f(r,n,o),o};const c="hsw-mobile-nav-no-scroll";let e=class extends v{constructor(){super(...arguments),this.animatedOpen=!1,this.withHiddenAttribute=!0}connectedCallback(){super.connectedCallback(),window.addEventListener("hashchange",this.requestClose.bind(this)),window.addEventListener("resize",this.requestClose.bind(this))}disconnectedCallback(){window.removeEventListener("hashchange",this.requestClose.bind(this)),window.removeEventListener("resize",this.requestClose.bind(this)),this.removeNoScrollStyle(),super.disconnectedCallback()}toggle(){this.open=!this.open}requestClose(){this.open=!1}attributeChangedCallback(t,r,n){super.attributeChangedCallback(t,r,n),t==="open"&&(this.open?this.addNoScrollStyle():this.removeNoScrollStyle(),setTimeout(()=>this.animateState()))}animateState(){this.open?(this.withHiddenAttribute=!1,setTimeout(()=>{this.animatedOpen=!0,this.requestUpdate()},10)):(this.drawerElement.addEventListener("transitionend",()=>{this.withHiddenAttribute=!0},{once:!0}),this.animatedOpen=!1)}addNoScrollStyle(){if(document.body.classList.add(c),this.noScrollStyleElement)return;this.noScrollStyleElement=document.createElement("style");const t=`.${c} { overflow: hidden; }`;this.noScrollStyleElement.appendChild(document.createTextNode(t)),document.head.appendChild(this.noScrollStyleElement)}removeNoScrollStyle(){document.body.classList.remove(c),this.noScrollStyleElement?.remove(),this.noScrollStyleElement=void 0}render(){return u`<div class="container" ?hidden=${this.withHiddenAttribute}>
      <div
        class=${d({container__overlay:!0,"container__overlay:visible":this.animatedOpen})}
        @click=${()=>this.toggle()}
      ></div>

      <div
        role="dialog"
        aria-modal="true"
        aria-hidden=${this.open?"false":"true"}
        class=${d({drawer:!0,"drawer:closed":!this.animatedOpen,"drawer:open":this.animatedOpen})}
      >
        <div class="drawer__header">
          <slot name="header"></slot>

          <div
            class=${d({container__close:!0,"container__close:visible":this.animatedOpen})}
          >
            <hsw-button
              icon="close"
              label="Close menu"
              size="md"
              icon-position="end"
              transparent
              @click=${()=>this.toggle()}
            ></hsw-button>
          </div>
        </div>
        <div class="drawer__body">
          <slot name="body">
            <slot @click=${()=>this.requestClose()}></slot>
          </slot>
        </div>
        <div class="drawer__footer">
          <slot name="footer"></slot>
        </div>
      </div>
    </div>`}};e.styles=m(_);i([w({type:Boolean,reflect:!0})],e.prototype,"open",2);i([y(".drawer")],e.prototype,"drawerElement",2);i([p()],e.prototype,"animatedOpen",2);i([p()],e.prototype,"withHiddenAttribute",2);i([h({passive:!0})],e.prototype,"toggle",1);i([h({passive:!0})],e.prototype,"requestClose",1);e=i([b("hsw-mobile-nav")],e);
